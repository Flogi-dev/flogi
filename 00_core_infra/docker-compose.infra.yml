# 00_core_infra/docker-compose.infra.yml
version: '3.8'

services:
  flogi_db_live:
    build:
      context: ./01_live_DB 
      dockerfile: Dockerfile
    container_name: Flogi_live_DB # 컨테이너 이름 변경 (코멘트 반영)
    environment:
      POSTGRES_USER: ${POSTGRES_LIVE_USER:-flogi_live_user} 
      POSTGRES_PASSWORD: ${POSTGRES_LIVE_PASSWORD:-your_strong_password_live} 
      POSTGRES_DB: ${POSTGRES_LIVE_DB:-flogi_live}
    ports:
      - "7654:5432"
    volumes:
      - Flogi_live_DB_data:/var/lib/postgresql/data # 볼륨 이름 변경 (코멘트 반영) - 볼륨 위치는 어디로?
      # 보스께서 직접 스키마 파일/폴더를 마운트할 영역입니다.
      # 예시: - ./01_live_DB/01_user:/docker-entrypoint-initdb.d/01_user
      #       - ./01_live_DB/00_migrations:/docker-entrypoint-initdb.d/00_migrations # 만약 마이그레이션 스크립트가 있다면
      #       (필요한 스키마 파일 또는 폴더를 여기에 추가하십시오.)
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  flogi_db_archive:
    build:
      context: ./02_archive_DB 
      dockerfile: Dockerfile 
    container_name: Flogi_archive_DB # 컨테이너 이름 변경 (코멘트 반영)
    environment:
      POSTGRES_USER: ${POSTGRES_ARCHIVE_USER:-flogi_archive_user}
      POSTGRES_PASSWORD: ${POSTGRES_ARCHIVE_PASSWORD:-your_strong_password_archive}
      POSTGRES_DB: ${POSTGRES_ARCHIVE_DB:-flogi_archive}
    ports:
      - "7655:5432"
    volumes:
      - Flogi_archive_DB_data:/var/lib/postgresql/data # 볼륨 이름 변경 (코멘트 반영)볼륨 위치는 어디로?
      # 보스께서 직접 스키마 파일/폴더를 마운트할 영역입니다.
      # 예시: - ./02_archive_DB/01_analytics_and_testing:/docker-entrypoint-initdb.d/01_analytics_and_testing
      #       (필요한 스키마 파일 또는 폴더를 여기에 추가하십시오.)
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_ARCHIVE_USER -d $$POSTGRES_ARCHIVE_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
  flogi_redis:
    build:
      context: ./03_redis
      dockerfile: Dockerfile # FROM redis:7.2.4-alpine 사용
    container_name: Flogi_Redis
    env_file:
      - ./03_redis/.env # REDIS_PASSWORD=your_redis_password_here 정의된 파일
    # CMD ["redis-server", "/etc/redis/redis.conf"] 를 Dockerfile에서 사용하므로,
    # 여기서는 비밀번호 설정만 command 로 추가하거나, redis.conf 내에서 환경변수를 참조하도록 설정할 수도 있습니다.
    # redis.conf 에 'requirepass ${REDIS_PASSWORD}' 와 같이 직접 환경변수를 사용할 수는 없으므로,
    # command 로 전달하는 것이 가장 명확합니다.
    command: redis-server /etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379" # 포트번호 문제 없니? 윈도우 네이티브라 기본 실행이랑 겹치면 비밀번호 오류라고 뜨면서 안고쳐져
    volumes:
      - flog_redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  Flogi_live_DB_data: # 볼륨 이름 변경 (코멘트 반영)
  Flogi_archive_DB_data: # 볼륨 이름 변경 (코멘트 반영)
  flog_redis_data:
# ... (loki 등 다른 인프라 서비스 정의는 추후 추가)